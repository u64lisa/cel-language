
class Tuple {
    private items: list;
    ingredients<..entry> {
        items => [];
        for (item <- entry)
            append(items, &item);
    }

    method size -> size(items);

    method bin bracket<other> -> items[other];

    method bin string -> `(${substr(str(items), 1, size(str(items)) - 1)})`;

    method bin eq<other> {
        if (type(other) != type(this)) return false;
        if (other::size() != this::size()) return false;

        list(this) == list(other)
    }

    method bin type {
        let types => [];
        for (item <- items)
            types.append(type(*item));
        return "(" + (",".join(types)) + ")";
    }

    method contains<x> -> contains(items, x);

    method bin list -> items;
}
